#include <functional>
#include <cstdio>
using std::function;
struct $t_bsl_Bool { int T; void* ptr; };
struct $d_bsl_False {};
struct $d_bsl_True {};
struct $t_bsl_IO { int T; void* ptr; };
struct $d_bsl_Data {void* d0; };
struct $d_bsl_Read {void* d0; };
struct $d_bsl_Write {void* d0; void* d1; };
struct $t_bsl_Int { int T; void* ptr; };
struct $t_bsl_Pair { int T; void* ptr; };
struct $d_bsl_Pair {void* d0; void* d1; };
int main() { [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_0) -> void* { return new function<void*(void*)>([=](void* $v_bsl_1) -> void* { return new $t_bsl_Pair { 0, new $d_bsl_Pair{ $v_bsl_0, $v_bsl_1 } }; }); });  void* $v_bsl_Pair = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_0) -> void* { return new function<void*(void*)>([=](void* $v_bsl_1) -> void* { return new $t_bsl_IO { 2, new $d_bsl_Write{ $v_bsl_0, $v_bsl_1 } }; }); });  void* $v_bsl_Write = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_0) -> void* { return new $t_bsl_IO { 1, new $d_bsl_Read{ $v_bsl_0 } }; });  void* $v_bsl_Read = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_0) -> void* { return new $t_bsl_IO { 0, new $d_bsl_Data{ $v_bsl_0 } }; });  void* $v_bsl_Data = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new $t_bsl_Bool { 1, new $d_bsl_True{ } };  void* $v_bsl_True = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new $t_bsl_Bool { 0, new $d_bsl_False{ } };  void* $v_bsl_False = $tmp_bsl_tmp; return [=]() -> void* { void* $v_bsl_bind = new function<void*(void*)>(); { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return new function<void*(void*)>([=](void* $v_bsl_f) -> void* { return [=]() -> void* { void* $tmp_bsl_tmp = $v_bsl_x; switch ((($t_bsl_IO*)($tmp_bsl_tmp))->T) {case 0: {void* $v_bsl_x = (($d_bsl_Data*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0; return (*((function<void*(void*)>*)($v_bsl_f)))($v_bsl_x); }case 1: {void* $v_bsl_g = (($d_bsl_Read*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0; return (*((function<void*(void*)>*)($v_bsl_Read)))(new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))((*((function<void*(void*)>*)($v_bsl_g)))($v_bsl_x)))))($v_bsl_f); })); }case 2: {void* $v_bsl_c = (($d_bsl_Write*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0;void* $v_bsl_x = (($d_bsl_Write*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d1; return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_Write)))($v_bsl_c))))((*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))($v_bsl_x))))($v_bsl_f)); }} }(); }); }); *((function<void*(void*)>*)$v_bsl_bind) = *((function<void*(void*)>*)$tmp_bsl_tmp); } return [=]() -> void* { void* $tmp_bsl_tmp = $v_bsl_Data;  void* $v_bsl_return = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = (*((function<void*(void*)>*)($v_bsl_Read)))(new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return (*((function<void*(void*)>*)($v_bsl_Data)))($v_bsl_x); }));  void* $v_bsl_getInt = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_Write)))($v_bsl_x))))((*((function<void*(void*)>*)($v_bsl_Data)))( new int(0) )); });  void* $v_bsl_putInt = $tmp_bsl_tmp; return [=]() -> void* { void* $v_bsl_runIO = new function<void*(void*)>(); { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return [=]() -> void* { void* $tmp_bsl_tmp = $v_bsl_x; switch ((($t_bsl_IO*)($tmp_bsl_tmp))->T) {case 0: {void* $v_bsl_x = (($d_bsl_Data*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0; return $v_bsl_x; }case 1: {void* $v_bsl_g = (($d_bsl_Read*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0; return (*((function<void*(void*)>*)($v_bsl_runIO)))((*((function<void*(void*)>*)($v_bsl_g)))( [=]() -> void* { int *x = new int; scanf("%d", x); return x; }() )); }case 2: {void* $v_bsl_c = (($d_bsl_Write*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d0;void* $v_bsl_x = (($d_bsl_Write*)((($t_bsl_IO*)($tmp_bsl_tmp))->ptr))->d1; return [=]() -> void* { void* $tmp_bsl_tmp = (*((function<void*(void*)>*)($v_bsl_runIO)))($v_bsl_x);  void* $v_bsl_x = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp =  (printf("%d\n", *((int*)$v_bsl_c)),(void*)0) ;  void* $v_bsl_y = $tmp_bsl_tmp; return $v_bsl_x; } (); } (); }} }(); }); *((function<void*(void*)>*)$v_bsl_runIO) = *((function<void*(void*)>*)$tmp_bsl_tmp); } return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return new function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  new int((*(int*)$v_bsl_a)+(*(int*)$v_bsl_b)) ; }); });  void* $v_bsl_add = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return  new int(-(*(int*)$v_bsl_a)) ; });  void* $v_bsl_neg = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return new function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  new int((*(int*)$v_bsl_a)-(*(int*)$v_bsl_b)) ; }); });  void* $v_bsl_sub = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return new function<void*(void*)>([=](void* $v_bsl_b) -> void* { return  new int((*(int*)$v_bsl_a)*(*(int*)$v_bsl_b)) ; }); });  void* $v_bsl_mul = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return new function<void*(void*)>([=](void* $v_bsl_b) -> void* { return [=]() -> void* { void* $tmp_bsl_tmp =  new int((*(int*)$v_bsl_a)/(*(int*)$v_bsl_b)) ;  void* $v_bsl_x = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp =  new int((*(int*)$v_bsl_a)%(*(int*)$v_bsl_b)) ;  void* $v_bsl_y = $tmp_bsl_tmp; return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_Pair)))($v_bsl_x))))($v_bsl_y); } (); } (); }); });  void* $v_bsl_div = $tmp_bsl_tmp; return [=]() -> void* { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return  new $t_bsl_Bool{ (*(int*)$v_bsl_a) == 0 } ; });  void* $v_bsl_eq0 = $tmp_bsl_tmp; return [=]() -> void* { void* $v_bsl_gcd = new function<void*(void*)>(); { void* $tmp_bsl_tmp = new function<void*(void*)>([=](void* $v_bsl_a) -> void* { return new function<void*(void*)>([=](void* $v_bsl_b) -> void* { return [=]() -> void* { void* $tmp_bsl_tmp = (*((function<void*(void*)>*)($v_bsl_eq0)))($v_bsl_a); switch ((($t_bsl_Bool*)($tmp_bsl_tmp))->T) {case 1: { return $v_bsl_b; }case 0: { return [=]() -> void* { void* $tmp_bsl_tmp = (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_div)))($v_bsl_b))))($v_bsl_a); switch ((($t_bsl_Pair*)($tmp_bsl_tmp))->T) {case 0: {void* $v_bsl_c = (($d_bsl_Pair*)((($t_bsl_Pair*)($tmp_bsl_tmp))->ptr))->d0;void* $v_bsl_d = (($d_bsl_Pair*)((($t_bsl_Pair*)($tmp_bsl_tmp))->ptr))->d1; return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_gcd)))($v_bsl_d))))($v_bsl_a); }} }(); }} }(); }); }); *((function<void*(void*)>*)$v_bsl_gcd) = *((function<void*(void*)>*)$tmp_bsl_tmp); } return [=]() -> void* { void* $v_bsl_echo = new $t_bsl_IO(); { void* $tmp_bsl_tmp = (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))($v_bsl_getInt))))(new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))((*((function<void*(void*)>*)($v_bsl_putInt)))($v_bsl_x)))))(new function<void*(void*)>([=](void* $v_bsl__) -> void* { return $v_bsl_echo; })); })); *(($t_bsl_IO*)$v_bsl_echo) = *(($t_bsl_IO*)$tmp_bsl_tmp); } return (*((function<void*(void*)>*)($v_bsl_runIO)))((*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))($v_bsl_getInt))))(new function<void*(void*)>([=](void* $v_bsl_x) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))((*((function<void*(void*)>*)($v_bsl_putInt)))($v_bsl_x)))))(new function<void*(void*)>([=](void* $v_bsl__) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))($v_bsl_getInt))))(new function<void*(void*)>([=](void* $v_bsl_y) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))((*((function<void*(void*)>*)($v_bsl_putInt)))($v_bsl_y)))))(new function<void*(void*)>([=](void* $v_bsl__) -> void* { return (*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_bind)))((*((function<void*(void*)>*)($v_bsl_putInt)))((*((function<void*(void*)>*)((*((function<void*(void*)>*)($v_bsl_gcd)))($v_bsl_x))))($v_bsl_y))))))(new function<void*(void*)>([=](void* $v_bsl__) -> void* { return $v_bsl_echo; })); })); })); })); }))); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); } (); }
